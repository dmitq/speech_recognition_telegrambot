import os
import random

import telebot
import uuid
import speech_recognition as sr

from telebot import types, TeleBot

token = '#'
bot = TeleBot(token)
r = sr.Recognizer()

days = ("""
8:30-9:15         –ì–µ–æ–≥—Ä–∞—Ñ–∏—è 0209 
9:30-10:15       –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ 0209
10:35-11:20     –ë–∏–æ–ª–æ–≥–∏—è 0218   
11:30-12:15     –•–∏–º–∏—è 0319 
12:30-13:15     –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è 0211/0328
14:05-14:50     –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ 0209 
14:55-16:30     –¢–í–∏–ú–° 0209 """, "8:30-9:15       –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 0209 \n9:30-10:15     –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ 0209 \n10:35-11:20   "
                             "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ 0327 \n11:35-13:15   –ê–ª–≥–µ–±—Ä–∞ 0209 \n14:05-14:50   –û–ë–ñ 0209 \n14:55-16:30   "
                             "–ì–µ–æ–º–µ—Ç—Ä–∏—è 0209", "8:30-9:15       –†–æ–¥–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 0209 \n9:35-10:20     –ê–Ω–≥–ª. —è–∑—ã–∫ 0209/0225 "
                             "\n11:45-13:20   –ê–ª–≥–µ–±—Ä–∞ 0209 \n13:25-14:10   –ì–µ–æ–º–µ—Ç—Ä–∏—è 0209 \n14:45-15:30   –•–∏–º–∏—è 0319 "
                             "\n15:35-17:10   –û–ü 0212/0328", "8:30-10:20     –§–∏–∑–∏–∫–∞ 0225 \n10:40-11:25   –ò—Å—Ç–æ—Ä–∏—è 0209 \n11:45-13:20   –û–ª–ú–∞—Ç 0209 "
                             "\n13:35-14:10   –§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞ \n14:45-15:30   –ë–∏–æ–ª–æ–≥–∏—è 0218 \n15:35-17:10   "
                             "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ 0209", "8:30-9:15       –ò—Å—Ç–æ—Ä–∏—è 0209 \n9:35-10:20     –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —è–∑—ã–∫ 0209 \n10:40-11:25   "
                             "–ê–Ω–≥–ª. —è–∑—ã–∫ 0209/0225 \n11:45-12:30   –§–∏–∑–∏–∫–∞ 0225 \n12:35-13:20   –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∏–∑. "
                             "—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ 0225 \n13:25-14:10   –§–∏–∑—Ä–∞ (–±–∞—Å—Å–µ–π–Ω) \n15:35-17:05   –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ "
                             "—Ñ–∏–∑–∏–∫–µ"
)

def recognise(filename):
    with sr.AudioFile(filename) as source:
        audio_text = r.listen(source)
        try:
            text = r.recognize_google(audio_text, language='ru_RU')
            return text
        except:
            return "Try again."

@bot.message_handler(commands=['start'])
def hello(message):
    text = f"<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.first_name}</b>! üëãüèª\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –Ω–∞–ø–∏—à–∏ /help. –û–Ω–∏ –µ—Å—Ç—å –∏ –≤ –±–ª–æ–∫–µ <i>–º–µ–Ω—é</i>. –ö—Ä–æ–º–µ —Ç–æ–≥–æ, —è –ø—Ä–∏–Ω–∏–º–∞—é <b>–≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã,</b> –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è –æ —á–µ–º-—Ç–æ."
    bot.send_message(message.from_user.id, text, parse_mode="html")

@bot.message_handler(commands=['news'])
def news(message):
    import requests
    from bs4 import BeautifulSoup as BS
    try:
        soup = BS(requests.get('https://sochisirius.ru/').text, 'html.parser')
        news = soup.find('div', class_='news-summary__items-list slides-pagination')
        url = news.find_all('a', class_='news-summary__item', href=True)
        for j in url:
            text = j.text.replace('\n', '').replace(' ' * 78, '')
            mes = text + '\n' + 'https://sochisirius.ru' + str(j.get('href'))
            bot.send_message(message.from_user.id, mes)
    except:
        bot.send_message(message.from_user.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–æ–≤–æ—Å—Ç–∏')

@bot.message_handler(commands=['help'])
def help(message):
    text = "–í–æ—Ç –º–æ–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n /schedule - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ \n /news - –Ω–æ–≤–æ—Å—Ç–∏ —Å —Å–∞–π—Ç–∞ –°–∏—Ä–∏—É—Å \n /site - —Å–∞–π—Ç \n /random - —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['site'])
def site(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url='https://github.com/dmitq'))
    bot.send_message(message.from_user.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=markup)

@bot.message_handler(commands=['contacts'])
def contacts(message):
    bot.send_message(message.from_user.id, "–¢–µ–ª–µ—Ñ–æ–Ω: +7(777)777-77-77")

@bot.message_handler(commands=['schedule'])
def schedule(message):
    keyboard = types.InlineKeyboardMarkup()
    key_monday = types.InlineKeyboardButton(text='–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', callback_data='monday')
    keyboard.add(key_monday)
    key_tue = types.InlineKeyboardButton(text='–í—Ç–æ—Ä–Ω–∏–∫', callback_data='tuesday')
    keyboard.add(key_tue)
    key_wed = types.InlineKeyboardButton(text='–°—Ä–µ–¥–∞', callback_data='wednesday')
    keyboard.add(key_wed)
    key_thur = types.InlineKeyboardButton(text='–ß–µ—Ç–≤–µ—Ä–≥', callback_data='thursday')
    keyboard.add(key_thur)
    key_fri = types.InlineKeyboardButton(text='–ü—è—Ç–Ω–∏—Ü–∞', callback_data='friday')
    keyboard.add(key_fri)
    bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!', reply_markup=keyboard)

    @bot.callback_query_handler(func=lambda call: True)
    def callback_worker(call):
        if call.data == "monday":
            bot.send_message(call.message.chat.id, days[0])
        elif call.data == "tuesday":
            bot.send_message(call.message.chat.id, days[1])
        elif call.data == "wednesday":
            bot.send_message(call.message.chat.id, days[2])
        elif call.data == "thursday":
            bot.send_message(call.message.chat.id, days[3])
        elif call.data == "friday":
            bot.send_message(call.message.chat.id, days[4])

@bot.message_handler(commands=['random'])
def randomazer(message):
    msg = bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ <b>—á–µ—Ä–µ–∑ —Ç–∏—Ä–µ,\n</b>–≤–æ—Ç —Ç–∞–∫: <i>x-y</i>',
                           parse_mode="html")
    bot.register_next_step_handler(msg, randomazer_step_2)
def randomazer_step_2(message):
    if '-' in message.text:
        tire = message.text.find('-')
        f_num = int(message.text[:tire])
        l_num = int(message.text[tire + 1:])
        bot.send_message(message.chat.id, "–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç " + str(f_num) + " –¥–æ " + str(l_num) + ": " + str(
            random.randint(f_num, l_num)))

@bot.message_handler(content_types=['voice'])
def voice_processing(message):
    filename = str(uuid.uuid4())
    file_name_full = filename + ".ogg"
    file_name_full_converted = filename + ".wav"
    file_info = bot.get_file(message.voice.file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    with open(file_name_full, 'wb') as new_file:
        new_file.write(downloaded_file)
    os.system("ffmpeg -i " + file_name_full + "  " + file_name_full_converted)
    text = recognise(file_name_full_converted)
    bot.send_message(message.chat.id, "–†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ:\n" + text)
    if "–Ω–æ–≤–æ—Å—Ç–∏" in text or "–Ω–æ–≤–æ–µ" in text:
        bot.send_message(message.chat.id, "–°–æ–±–∏—Ä–∞—é –Ω–æ–≤–æ—Å—Ç–∏... ")
        news(message)
    elif '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' in text:
        bot.send_message(message.chat.id, days[0])
    elif '–≤—Ç–æ—Ä–Ω–∏–∫' in text:
        bot.send_message(message.chat.id, days[1])
    elif '—Å—Ä–µ–¥–∞' in text or '—Å—Ä–µ–¥—É' in text:
        bot.send_message(message.chat.id, days[2])
    elif '—á–µ—Ç–≤–µ—Ä–≥' in text:
        bot.send_message(message.chat.id, days[3])
    elif '–ø—è—Ç–Ω–∏—Ü–∞' in text or "–ø—è—Ç–Ω–∏—Ü—É" in text:
        bot.send_message(message.chat.id, days[4])
    elif "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" in text:
        schedule(message)
    elif '—Å–∞–π—Ç' in text:
        site(message)
    elif '—á–∏—Å–ª–æ' in text and "–æ—Ç" in text and "–¥–æ" in text:
        ot = text.find('–æ—Ç')
        do = text.find('–¥–æ')
        f_num = text[ot + 3:do - 1]
        l_num = text[do + 3:]
        if f_num.isdigit() and l_num.isdigit():
            f_num = int(f_num)
            l_num = int(l_num)
            bot.send_message(message.chat.id, str(random.randint(f_num, l_num)))
        else:
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ.")
    elif '—á–∏—Å–ª–æ' in text:
        bot.send_message(message.chat.id, str(random.randint(1, 100)))
    elif '–∫–æ–Ω—Ç–∞–∫—Ç—ã' in text:
        contacts(message)
    else:
        bot.send_message(message.chat.id, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    os.remove(file_name_full)
    os.remove(file_name_full_converted)


bot.polling(none_stop=True, interval=0)
